// Generated by CoffeeScript 1.10.0
(function() {
  var Privilege, createError, parseurl;

  parseurl = require('parseurl');

  Privilege = require('privilege');

  createError = require('http-errors');

  module.exports = function(options) {
    var notAuthorized, pathMap, privilege, ref, ref1, roleMap;
    pathMap = ((ref = options.pathMap) != null ? ref.getToken : void 0) ? options.pathMap : Privilege.PermissionMap.fromJson(options.pathMap);
    roleMap = ((ref1 = options.roleMap) != null ? ref1.check : void 0) ? options.roleMap : Privilege.RoleMap.fromJson(options.roleMap);
    notAuthorized = options.notAuthorized ? options.notAuthorized : function(req, res, next) {
      return next(createError(403, 'Forbidden'));
    };
    privilege = Privilege({
      pathMap: pathMap,
      roleMap: roleMap,
      contextToRoles: options.contextToRoles
    });
    return function(req, res, next) {
      var pathname;
      if (!req.originalUrl && !req.url) {
        return notAuthorized(req, res, next);
      }
      pathname = parseurl.original(req).pathname;
      return privilege(req, pathname, req.method, function(err, is_allowed) {
        if (err) {
          return next(err);
        } else if (!is_allowed) {
          return notAuthorized(req, res, next);
        } else {
          return next();
        }
      });
    };
  };

}).call(this);
